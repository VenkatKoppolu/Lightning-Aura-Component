public without sharing class Utility {
	public static final String EMPTYSTR                             = '';
    public static final String ONESPACESTR                          = ' ';
    public static final String SINGLEDASHSTR                        = ' - ';
    public static final String PLUSSTR                              = ' + ';
    public static final String TOSTR                               = ' to ';
    public static final String TWODASHSTR                           = '--';
    public static final String COLONSTR                             = ':';
    public static final String SEMICOLONSTR                         = ';';
    public static final String COMMASTR                             = ',';
    public static final String UNDERSCORESTR                        = '_';
    public static final String NONESTR                              = 'none';
    public static final String ESCAPESINGLEQUOTESTR                 = '\'';
    public static final String DOTSTR                               = '.';
    public static final String TILDASTR                             = '~'; 
    public static final String DASHNONEDASHSTR                      = '-None-'; 
    
    public static final String MONTHSTR                             = 'Month';
    public static final String AGENDADAY                            = 'agendaDay';
    public static final String WEEKSTR                              = 'Week';
    public static final String DAYSTR                               = 'Day';
    public static final String MONDAYSTR                            = 'Monday';
    public static final String TUESDAYSTR                           = 'Tuesday';
    public static final String WEDNESDAYSTR                         = 'Wednesday';
    public static final String THURSDAYSTR                          = 'Thursday';
    public static final String FRIDAYSTR                            = 'Friday';
    public static final String SATURDAYSTR                          = 'Saturday';
    public static final String SUNDAYSTR                            = 'Sunday';
    public static final String FULLDAYSTR                           = 'Full_Day';
    public static final String HALFDAYSTR                           = 'Half Day' ; 
    
    public static final String AVAILABLESTR                         = 'Available';
    public static final String BOOKEDSTR                            = 'Booked';
    public static final String CANCELLEDSTR                         = 'Cancelled';
    public static final String TENTATIVESTR                         = 'Tentative';
    
    public static final String DAYFORMATSTR                         = 'EEEE'; 
    public static final String DATEFORMATSTR                        = 'EEE';   
    public static final String FULLDATETIMEFORMATSTR                = 'yyyy-MM-dd\'T\'HH:mm:ss';
    public static final String TIMEFORMATSTR                        = 'hh:mm a'; 
    public static final String TIMEFORMATHMMASTR                    = 'h:mm a'; 
    public static final String DATEFORMAT                           = 'dd/mm/yy';
    public static final String DATESTR                              = 'dateStr';
    public static final String AGENDAWEEKSSTR                       = 'agendaWeek';
    public static final String MMDDDATEFORMAT                       = 'MM/dd'; 
    public static final String ENDDATETIMESTR                       = 'endDateTime';
    public static final String ENDSTR                               = 'end';
    public static final String HOURLYSTR                            = 'Hourly';
    public static final String DAILYSTR                             = 'Daily';
    public static final String AMSTR                                = 'AM';
    public static final String PMSTR                                = 'PM';
    public static final String STARTTIME12STR                       = '12';
    public static final String STARTTIME00STR                       = '00';
    public static final String TIME0830STR                          = '8:30';
    public static final String TIME0330STR                          = '3:30';
    public static final String TIME0100STR                          = '1:00';
    public static final String TIME1000STR                          = '10:00';
    public static final String TIME1100STR                          = '11:00';
    public static final String TIME1200STR                          = '12:00';
    public static final String TIME0STR                             = '0';
     
    public static final String DATERANGELABEL                       = 'Apply for Date Range? ';
    public static final String DELETEOLDSCHLABEL                    = 'Delete old Schedules? ';
    public static final String SELECTDATELABEL                      = 'Selected Date '; 
    
    public static final String SINGLEDAYSLOTSTR                     = 'SingleDaySlotIndex';
    public static final String TIMESLOTWRAPPERROWINDEXSTR           = 'timeslotWrapperRowIndex';
    
    public static final String DEFAULTAVAILACOLOR                   = '#90D93F';
    public static final String DEFAULTBOOKEDCOLOR                   = '#FFA500';
    public static final String DEFAULTUNAVAILABLECOLOR              = '#D95252';
    public static final String DEFAULTTENTATIVEBOOKEDCOLOR          = '#dd15ca';
    
    public static final String FULLMATCH                            = 'Full Match';
    public static final String PARTIALMATCH                         = 'Partial Match';
    
    public static final String SORTDIRECTIONASC                     = 'ASC';
    public static final String SORTDIRECTIONDESC                    = 'DESC'; 
    public static final String SORTBYMATCH                          = 'No Of Matches';
    public static final String SORTBYCANDIDATENAME                  = 'Candidate Name';
    
    public static final String SAVESTR                              = 'save';
    
    public static final String CONTACTIDSTR                         = 'contactid'; 
    public static final String CRIDSTR                              = 'crId'; 
    public static final String VACANCYIDSTR                         = 'vacancyId';
    public static final String IDSTR                                = 'id';
    public static final String ARGCONTACT1STR                       = 'contact1';
    public static final String ARGCANDIDATENAMESTR                  = 'candidateName';
    public static final String ARGSELECTEDCRIDSTR                   = 'selectedCRID';
    public static final String CRSSTR                               = 'CRS';
    public static final String CASTR                                = 'CA';
    public static final String VSSTR                                = 'VS';
    /*public static final String CRSCASTR                             = 'CRS + CA';
    public static final String CRSVSSTR                             = 'CRS + VS'; 
    public static final String CRSVSCASTR                           = 'CRS + VS + CA';*/
    public static final String REPLACEALLSTR                        = 'Replace All';
    public static final String BTNUPDATESTR                         = 'btnUpdate';
    public static final String BTNDELETESTR                         = 'btnDelete';
    
    public static final String FLDCANDSTATUSSTR                     = 'Candidate_Status__c';  
    public static final String DISCLAIMERRECORDTYP                  = 'Disclaimer';  
    public static final String UNKNOWNSTATUSSTR                     = 'Unknown'; 
    
    public static final String TOOLTYPESTYLECLASSSTR                = 'ui-tooltip-shadow ui-tooltip-light'; 
    public static final String NEWLINEHTML                          = '<br/>';
    
    public static final String ERRORMESSAGE                         = 'Error Occured at Line Number. ';
    public static final String ERRORMESSAGECONTD                    = ' Please Contact your Administrator.';
    public static final String LINENUMBERSTR                        = ' Line number ';
    public static final String CANDAVAILTYPECATEGORY                = 'AvailableType';
    public static final String CANDUNAVAILTYPECATEGORY              = 'UnavailableType';
    public static final String SINGLEDAYINSTR                       = 'SingleDaySlotIndex';
    public static final String NOSTR                                = 'No';
    public static final String ASSIGNMENTACTIVEPICKVAL              = 'No';
    public static final String JOBPGPARAMETERNAME                   = 'Job1';
    public static final String GREENCOLORSTYLE                      = 'greenColorStyle';

    public static final String RELATIONSHIPSTR                      = '__r';
    public static final String CUSTOMSTR                            = '__c';

    public static final String OPENSTR                              = 'Open';
    public static final String CLOSESTR                             = 'Closed';
    public static final String JOBSTR                               = 'Job';
    public static final String CANDIDATESTR                         = 'CANDIDATE'; 
    public static final String PARTIALSAVESTR                       = 'partialsave';
    public static final String EXTRADUTIES                          = 'Extra Duties';
    public static final String CANDIDATECALENDAR                    = 'CandidateCalendar';
    public static final String JOBCALENDAR                          = 'JobCalendar';
    public static final String CRCALENDAR                           = 'ClosingReportCalendar';
    
    public static final String STDATE                               = 'startDate';
    public static final String VIEWTYPE                             = 'viewType';
    public static final String JOBIDSTR                             = 'jobId';
    public static final String CALSTR                               = 'calendar';
    public static final String CRSTR                                = 'CR';

    public static String getDay(Integer day) {
        if(day == 0)
        return 'MON';
        else if(day == 1)
        return 'TUE';
        else if(day == 2)
        return 'WED';
        else if(day == 3)
        return 'THU';
        else if(day == 4)
        return 'FRI';
        else if(day == 5)
        return 'SAT';
        else if(day == 6)
        return 'SUN';
        return 'MON';
    }

    public static String getFullDay(Integer day) {
        if(day == 0)
        return 'Monday';
        else if(day == 1)
        return 'Tuesday';
        else if(day == 2)
        return 'Wednesday';
        else if(day == 3)
        return 'Thursday';
        else if(day == 4)
        return 'Friday';
        else if(day == 5)
        return 'Saturday';
        else if(day == 6)
        return 'Sunday';
        return 'Monday';
    }

    public static String getMonth(Integer month) {
        if(month == 1)
        return 'Jan';
        else if(month == 2)
        return 'Feb';
        else if(month == 3)
        return 'Mar';
        else if(month == 4)
        return 'Apr';
        else if(month == 5)
        return 'May';
        else if(month == 6)
        return 'Jun';
        else if(month == 7)
        return 'Jul';
        else if(month == 8)
        return 'Aug';
        else if(month == 9)
        return 'Sep';
        else if(month == 10)
        return 'Oct';
        else if(month == 11)
        return 'Nov';
        else if(month == 12)
        return 'Dec';
        return 'Jan';
    }

    public static String addTableRow(String label, String value) {
        String tooltipContent    = '<tr>';
        tooltipContent += '<td align="right" width="35%" style="padding-top:3px;"><b>' + label + ': </b></td>';
        tooltipContent += '<td style="padding-left:5px;padding-top:3px;">' + value + '</td>';
        tooltipContent += '</tr>';
        return tooltipContent;
    }
    public static String addTableRow(String label, Sobject value) {
        String tooltipContent    = '<tr>';
        tooltipContent += '<td align="right" width="35%" style="padding-top:3px;"><b>' + label + ': </b></td>';
        tooltipContent += '<td style="padding-left:5px;padding-top:3px;">' + value + '</td>';
        tooltipContent += '</tr>';
        return tooltipContent;
    }

    public static String addTableRow(String label, Decimal value) {
        String valueStr = '';
        if(value != null)
        valueStr = String.valueOf(value);
        return addTableRow(label, valueStr);
    }

    public static String addTableRow(String label, Date value) {
        String tooltipContent    = '<tr>';
        tooltipContent += '<td align="right" width="35%" style="padding-top:3px;"><b>' + label + ': </b></td>';
        tooltipContent += '<td style="padding-left:5px;padding-top:3px;">' + value + '</td>';
        tooltipContent += '</tr>';
        return tooltipContent;
    }
    
    /* public static String getUserViewRedirectionURL(){
        string redirectURL = '';
        if(UserInfo.getUITheme().containsIgnoreCase('Theme4d')){
                redirectURL = Label.LightningRedirectURL;
        }
        return redirectURL;
	 }*/
    public static string addTableRowLDS(String label, String value){
        String tooltipContent = '';
        tooltipContent += '<div class="slds-m-bottom_x-small slds-border_bottom">';
        tooltipContent += '<div class="slds-text-heading--label slds-truncate slds-text-color--weak " style="max-width:60%;font-weight: bold;">'+label+'</div>';
        tooltipContent += '<div class="slds-truncate" style="max-width:80%;color:black;" title="'+value+'">'+value+'</div>';
        tooltipContent += '</div>';
        return tooltipContent;
    }
     public static string addTableRowLDS(String label, Sobject value){
        String tooltipContent = '';
        tooltipContent += '<div class="slds-m-bottom_x-small slds-border_bottom">';
        tooltipContent += '<div class="slds-text-heading--label slds-truncate slds-text-color--weak " style="max-width:60%;font-weight: bold;">'+label+'</div>';
        tooltipContent += '<div class="slds-truncate" style="max-width:80%;color:black;" title="'+value+'">'+value+'</div>';
        tooltipContent += '</div>';
        return tooltipContent;
    }
     public static string addTableRowLDS(String label, Date value){
        String tooltipContent = '';
        tooltipContent += '<div class="slds-m-bottom_x-small slds-border_bottom">';
        tooltipContent += '<div class="slds-text-heading--label slds-truncate slds-text-color--weak " style="max-width:60%;font-weight: bold;">'+label+'</div>';
        tooltipContent += '<div class="slds-truncate" style="max-width:80%;color:black;" title="'+value+'">'+value+'</div>';
        tooltipContent += '</div>';
        return tooltipContent;
    }
    public static string addTableRowLDS(String label, Decimal value){
        String valueStr = '';
        if(value != null)
         valueStr = String.valueOf(value);
        return addTableRowLDS(label, valueStr);
    }
	public static String getUserViewRedirectionURL(){
        string redirectURL = '';
        if(UserInfo.getUITheme().containsIgnoreCase('Theme4d')){
                redirectURL = 'testredirecturl';//Label.LightningRedirectURL;
        }
        return redirectURL;
     }
    public static String getMinipageLayoutLDSHeader(String objectName,String recordId){
        String redirectURL = getUserViewRedirectionURL();
        String tooltipContent = '';
         tooltipContent = '<article class="slds-scope" style="overflow:auto;overflow-x: hidden;">';
         tooltipContent += '<div class="slds-card__header slds-grid">';
         tooltipContent += '<header class="slds-media slds-media_center slds-has-flexi-truncate">';
         tooltipContent += '<div class="slds-media__body">';
         tooltipContent += '<h2>';
         tooltipContent += '<span class="slds-card__header-link slds-truncate">';
         tooltipContent += '<span class="slds-text-heading_small" style="font-weight: bold;"> '+objectName+'</span>';
         tooltipContent += '</span>';
         tooltipContent += '</h2>';
         tooltipContent += '</div>';
         tooltipContent += '</header>';
         tooltipContent += '<div class="slds-no-flex">';
         tooltipContent += '<button class="slds-button slds-button_neutral" onclick="window.open(\''+redirectURL+'/'+recordId+'\'); return false;"> View</button>';
         tooltipContent += '<button class="slds-button slds-button_neutral" onclick="window.open(\''+redirectURL+'/'+recordId+'/e?retURL='+redirectURL+'/'+recordId+'\'); return false;" > Edit</button>';
         tooltipContent += '</div>';
         tooltipContent += '</div>';
         tooltipContent += '<div class="slds-card__body slds-card__body_inner" style="width:400px;">';
         tooltipContent += '<div id="table">';
        return tooltipContent;
    }
    public static String getMinipageLayoutLDSEndTags(){
        String tooltipContent = '</div></div></article>';
        return tooltipContent;
    }
    /*END*/
    // Returns date formatted as DD/MM/YYYY
    public static String DateFormat(Date dt) {
        String DateFormat = '';
        if(dt != null) {
            DateFormat = String.valueOf(String.valueOf(dt.day()) + '/' + dt.month()) + '/' + String.valueOf(dt.year());
        }
        return DateFormat;
    /*if(dt != null)
        return dt.format();
    else
    return '';*/
}
    // Returns date formatted as MM/DD/YYYY
    public static String formatDate(Date dt) {
        String formattedDate = '';
        if(dt != null) {
        //formattedDate = dt.format();
        formattedDate = String.valueOf(dt.month()) + '/' + String.valueOf(dt.day()) + '/' + String.valueOf(dt.year());
    }
    return formattedDate;
}
     // Returns date formatted as YYYY/MM/DD
     public static Date formatedDate(String dt) {
        Date formatedDate ;
        String[] dates = dt.split('/');
        if(String.isNotBlank(dt) != null) {
            formatedDate = date.newInstance(Integer.valueOf(dates[2]), Integer.valueOf(dates[1]), Integer.valueOf(dates[0]));
        }
        return formatedDate;
     }


    // Check if the User is Portal Enabled or not
    public static boolean isInternalUser() {
        try { return String.isBlank(Site.getName()); } catch(Exception e) {} return false;
    }

    public static String currentUserProfileName {
        get {
            if(currentUserProfileName == null)
            currentUserProfileName = [Select Name from Profile where Id=:userinfo.getProfileId()].Name;
            return currentUserProfileName;
        }
        private set;
    }


    // to generate formatted query string for a multi picklist field value
    public static String listToFormattedMultiPicklistString(List<String> strList) {
        string queryStr = '';
        for(String spec : strList){
            queryStr += '\'' + escapeSingleQuotes(spec) + '\',';
        }
        queryStr = queryStr.subString(0, queryStr.length() - 1);
        queryStr = '(' + queryStr + ')';
        return queryStr;
    }

         // to generate formatted query string for a multi picklist field value
         public static String listToFormattedMultiPicklistStringSemi(List<String> strList) {
            string queryStr = '';
            for(String spec : strList){
                queryStr += '\'' + escapeSingleQuotes(spec) + '\';';
            }
            queryStr = queryStr.subString(0, queryStr.length() - 1);
            queryStr = '(' + queryStr + ')';
            return queryStr;
         }
         /* Commented by Accenture - MS - W-007423 - To show Candidate Availablity Type categories in greenColorStyle */
        /* public static Map<String, String> colorStsMap = new Map<String, String> {
            'Booked'                                            => Label.Booked_color_code,
            //'Tentative Booked'                                    => Label.Tentative_Booked_color_code,
            'Holiday'                                           => Label.Holiday_color_code,
            'Unknown'                                           => Label.Unknown_color_code,
            'Working for Another Agency'    => 'redColorStyle',
            'Available'                                     => Label.Available_color_code,
            'AM'                                                    => 'greenColorStyle',
            'PM'                                                    => 'greenColorStyle',
            'Full Day'                                      => Label.Full_Day_color_code,
            'Sick'                                              => Label.Unavailable_color_code,
            'Interview'                                     => 'greenColorStyle',
            'Unavailable'                                   => Label.Unavailable_color_code,
            'Draft'                                         => Label.Draft_color_code
         }; */

         /* VF UTIL FUNCTIONS */
         public static void AddInfoMessage( String s) {
            ApexPages.AddMessage( new ApexPages.Message( ApexPages.Severity.INFO, s));
         }

         public static void AddWarningMessage( String s) {
            ApexPages.AddMessage( new ApexPages.Message( ApexPages.Severity.WARNING, s));
         }

         public static void AddConfirmMessage( String s) {
            ApexPages.AddMessage( new ApexPages.Message( ApexPages.Severity.CONFIRM, s));
         }

         public static void AddErrorMessage( String s) {
            ApexPages.AddMessage( new ApexPages.Message( ApexPages.Severity.ERROR, s));
         }

         public static void AddFatalMessage( String s) {
            ApexPages.AddMessage( new ApexPages.Message( ApexPages.Severity.FATAL, s));
         }
         

    // Returns the Page parameter if present.
    public static String getPageParameter(String param) {
        if (ApexPages.currentPage().getParameters().containsKey(param)) {
            return escapeSingleQuotes(ApexPages.CurrentPage().getParameters().get(param));  //.replace('%2F', '')
        }
        return null;
    }

    public static String escapeSingleQuotes(String param) {
        String stringToReturn;
        if (param != null) stringToReturn = String.escapeSingleQuotes(param);
        return stringToReturn;
    }

    // Utility method to check for specifc page message in apex pages
    public static Boolean hasMessage( String pageMessage) {
        if ( ApexPages.hasMessages() ) {
            for ( ApexPages.Message msg : ApexPages.getMessages()) {
                if ( msg.getDetail().contains( pageMessage)) {
                    return true;
                }
            }
        }

        return false;
    }

    public static DateTime formatDateTimefromDate(Date dateVar,String startTime){

        String startDateTime = dateVar.format();

        String startTimeHour = startTime.split(':')[0];
        String startTimeMinute = startTime.split(':')[1].remove(' AM').remove(' PM');

        if (startTime.contains(' AM') && startTimeHour=='12') {
            startTimeHour = '00';
        }

        Datetime returnDt = Datetime.newInstance(
            dateVar.year(),
            dateVar.month(),
            dateVar.day(),
            Integer.valueOf(startTimeHour),
            Integer.valueOf(startTimeMinute),
            00
            );

        if (startTime.contains(' PM') && startTimeHour !='00' && startTimeHour !='12') {
            returnDt = returnDt.addHours(12);
        }

        return returnDt;
    }
    
	
    


}